<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>Evi</string>
    <key>scopeName</key>
    <string>source.evi</string>
    <key>fileTypes</key>
    <array>
      <string>evi</string>
    </array>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#base</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#funcdeclarations</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#declarations</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#illegals</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>base</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#pre-directives</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#macro-invoke</string>
          </dict>
        </array>
      </dict>
      <key>funcdeclarations</key>
      <dict>
        <key>name</key>
        <string>meta.declaration.function.evi</string>
        <key>begin</key>
        <string>(@)(\s*!)?\s*(?:([A-Za-z_][A-Za-z_0-9]*)|(\S+))\s*(?:((?:!\s*)?(?:(?:u)?i(?:(?:128)|(?:16|32|64)|(?:4|8))|i1|chr|bln|sze|flt|dbl|nll)(?:\s*\*)*)|(\S*))\s*(?:(\()|(\S*))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.declaration.function.evi</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.static.evi</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.declaration.evi</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.evi</string>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>storage.type.return.evi</string>
          </dict>
          <key>6</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal6.evi</string>
          </dict>
          <key>7</key>
          <dict>
            <key>name</key>
            <string>punctuation.parentheses.arguments.start.evi</string>
          </dict>
          <key>8</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal8.evi</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#base</string>
          </dict>
          <dict>
            <key>name</key>
            <string>variable.parameter.evi</string>
            <key>match</key>
            <string>\b(?:!\s*)?(?:(?:u)?i(?:(?:128)|(?:16|32|64)|(?:4|8))|i1|chr|bln|sze|flt|dbl|nll)(?:\s*\*)*|\*\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.variadic.evi</string>
            <key>match</key>
            <string>\.\.\.</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#illegals</string>
          </dict>
        </array>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parentheses.arguments.end.evi</string>
          </dict>
        </dict>
      </dict>
      <key>declarations</key>
      <dict>
        <key>name</key>
        <string>meta.declaration.evi</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#base</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#vardeclarations</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#statements</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#illegals</string>
          </dict>
        </array>
      </dict>
      <key>vardeclarations</key>
      <dict>
        <key>name</key>
        <string>meta.declaration.variable.evi</string>
        <key>begin</key>
        <string>(%)(\s*!)?\s*(?:([A-Za-z_][A-Za-z_0-9]*)|(\S*))\s*(?:(?:(,)\s*([A-Za-z_][A-Za-z_0-9]*)\s*)*|(\S*))(?:((?:!\s*)?(?:(?:u)?i(?:(?:128)|(?:16|32|64)|(?:4|8))|i1|chr|bln|sze|flt|dbl|nll)(?:\s*\*)*)|(\S*))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.declaration.variable.evi</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.static.evi</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.variable.evi</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.4.evi</string>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>punctuation.comma.separator.evi</string>
          </dict>
          <key>6</key>
          <dict>
            <key>name</key>
            <string>entity.name.variable.evi</string>
          </dict>
          <key>7</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.7.evi</string>
          </dict>
          <key>8</key>
          <dict>
            <key>name</key>
            <string>storage.type.variable.evi</string>
          </dict>
          <key>9</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.9.evi</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#base</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punct-comma</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#illegals</string>
          </dict>
        </array>
        <key>end</key>
        <string>;</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.declaration.evi</string>
          </dict>
        </dict>
      </dict>
      <key>statements</key>
      <dict>
        <key>name</key>
        <string>meta.statement.evi</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#base</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#assignment-stmts</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#if-stmts</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#loop-stmts</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block-stmts</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#return-stmts</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression-stmts</string>
          </dict>
        </array>
      </dict>
      <key>assignment-stmts</key>
      <dict>
        <key>begin</key>
        <string>(=(?!=))\s*(?:([A-Za-z_][A-Za-z_0-9]*)|(\S+))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.evi</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>variable.name.evi</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.evi</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#illegals</string>
          </dict>
        </array>
        <key>end</key>
        <string>(;)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.evi</string>
          </dict>
        </dict>
      </dict>
      <key>if-stmts</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.if-statement.evi</string>
            <key>begin</key>
            <string>(\?\?)\s*(?:(\()|(\S*))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.flow.if.evi</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.condition.start.evi</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.if-statement.evi</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expressions</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#illegals</string>
              </dict>
            </array>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.condition.end.evi</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.flow.else.evi</string>
            <key>match</key>
            <string>::</string>
          </dict>
        </array>
      </dict>
      <key>loop-stmts</key>
      <dict>
        <key>name</key>
        <string>meta.loop-statement.evi</string>
        <key>begin</key>
        <string>(\!\!)\s*(?:(\()|(\S*))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.flow.loop.evi</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.parentheses.loop.start.evi</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.loop-statement.evi</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#declarations</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#illegals</string>
          </dict>
        </array>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parentheses.loop.end.evi</string>
          </dict>
        </dict>
      </dict>
      <key>block-stmts</key>
      <dict>
        <key>name</key>
        <string>meta.statement.block.evi</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.brace.block.start.evi</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#declarations</string>
          </dict>
        </array>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.brace.block.end.evi</string>
          </dict>
        </dict>
      </dict>
      <key>return-stmts</key>
      <dict>
        <key>begin</key>
        <string>\~</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.flow.return.evi</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#illegals</string>
          </dict>
        </array>
        <key>end</key>
        <string>;</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.return.evi</string>
          </dict>
        </dict>
      </dict>
      <key>expression-stmts</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punct-terminator</string>
          </dict>
        </array>
      </dict>
      <key>expressions</key>
      <dict>
        <key>name</key>
        <string>meta.expression.evi</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#base</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operators</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variables</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#funccalls</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#arrays</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#strings</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#arrays</string>
          </dict>
        </array>
      </dict>
      <key>operators</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.cast.evi</string>
            <key>match</key>
            <string>(-&gt;)\s*(?:((?:!\s*)?(?:(?:u)?i(?:(?:128)|(?:16|32|64)|(?:4|8))|i1|chr|bln|sze|flt|dbl|nll)(?:\s*\*)*)|(\()\s*((?:!\s*)?(?:(?:u)?i(?:(?:128)|(?:16|32|64)|(?:4|8))|i1|chr|bln|sze|flt|dbl|nll)(?:\s*\*)*)\s*(\))|(\S+))</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.cast.evi</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>storage.type.cast.evi</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.cast.start.evi</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>storage.type.cast.evi</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.cast.end.evi</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.cast.evi</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.size-of.evi</string>
            <key>match</key>
            <string>(\?)\s*(?:(?:(\()\s*((?:!\s*)?(?:(?:u)?i(?:(?:128)|(?:16|32|64)|(?:4|8))|i1|chr|bln|sze|flt|dbl|nll)(?:\s*\*)*)\s*(\)))|((?:!\s*)?(?:(?:u)?i(?:(?:128)|(?:16|32|64)|(?:4|8))|i1|chr|bln|sze|flt|dbl|nll)(?:\s*\*)*))</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.size_of.evi</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.separator.evi</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>storage.type.evi</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>punctuation.separator.evi</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>storage.type.evi</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.ternary-expression.evi</string>
            <key>begin</key>
            <string>\?</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.ternary.evi</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expressions</string>
              </dict>
            </array>
            <key>end</key>
            <string>:</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.ternary.evi</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.expression-grouping.evi</string>
            <key>begin</key>
            <string>\(</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.grouping.start.evi</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
            </array>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.grouping.end.evi</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.subscript.evi</string>
            <key>begin</key>
            <string>\[</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.bracket.subscript.begin.evi</string>
              </dict>
            </dict>
            <key>contentName</key>
            <string>meta.subscript.value.evi</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expressions</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#illegals</string>
              </dict>
            </array>
            <key>end</key>
            <string>\]</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.bracket.subscript.end.evi</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.bitwise.shift.evi</string>
            <key>match</key>
            <string>&lt;&lt;|&gt;&gt;|&gt;&gt;</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.comparison.evi</string>
            <key>match</key>
            <string>==|/=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.relational.evi</string>
            <key>match</key>
            <string>&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.logical.evi</string>
            <key>match</key>
            <string>\!|&amp;&amp;|\|\||\^\^</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.bitwise.evi</string>
            <key>match</key>
            <string>&amp;|\^|\|</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.decrement.evi</string>
            <key>match</key>
            <string>--</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.increment.evi</string>
            <key>match</key>
            <string>\+\+</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.arithmetic.evi</string>
            <key>match</key>
            <string>\*|/|-|\+</string>
          </dict>
        </array>
      </dict>
      <key>variables</key>
      <dict>
        <key>match</key>
        <string>(\$[A-Za-z_][A-Za-z_0-9]*)|(\$[0-9]+)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.name.evi</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>variable.parameter.evi</string>
          </dict>
        </dict>
      </dict>
      <key>funccalls</key>
      <dict>
        <key>name</key>
        <string>meta.function-call.evi</string>
        <key>begin</key>
        <string>([A-Za-z_][A-Za-z_0-9]*)\s*(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.evi</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.parentheses.arguments.start.evi</string>
          </dict>
        </dict>
        <key>contentName</key>
        <string>meta.funtion-call.arguments.evi</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#base</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punct-comma</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#illegals</string>
          </dict>
        </array>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.parentheses.arguments.start.evi</string>
          </dict>
        </dict>
      </dict>
      <key>numbers</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.numeric.binary.evi</string>
            <key>match</key>
            <string>\b0b[0-1]+\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.decimal.evi</string>
            <key>match</key>
            <string>\b[0-9]+(?:\.[0-9]*)?\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.hexadecimal.evi</string>
            <key>match</key>
            <string>\b0x[0-9a-fA-F]+\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.octal.evi</string>
            <key>match</key>
            <string>\b0c[0-7]+\b</string>
          </dict>
        </array>
      </dict>
      <key>strings</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>string.quoted.double.evi</string>
            <key>begin</key>
            <string>"</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.evi</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#string_escaped_char</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#string_placeholder</string>
              </dict>
            </array>
            <key>end</key>
            <string>"</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.evi</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>string.quoted.single.evi</string>
            <key>begin</key>
            <string>\'</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.evi</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#string_escaped_char</string>
              </dict>
            </array>
            <key>end</key>
            <string>\'</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.evi</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>string_escaped_char</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.character.escape.evi</string>
            <key>match</key>
            <string>\\(a|b|e|f|n|r|t|v|\\|'|"|0)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid.illegal.unknown-escape.evi</string>
            <key>match</key>
            <string>\\.</string>
          </dict>
        </array>
      </dict>
      <key>string_placeholder</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.other.placeholder.evi</string>
            <key>match</key>
            <string>(?x)%
  (\d+\$)?                                      # field (argument #)
  [#0\- +']*                                    # flags
  [,;:_]?                                       # separator character (AltiVec)
  ((-?\d+)|\*(-?\d+\$)?)?                       # minimum field width
  (\.((-?\d+)|\*(-?\d+\$)?)?)?                  # precision
  (hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)?          # length modifier
  (\[[^\]]+\]|[am]s|[diouxXDOUeEfFgGaACcSspn%]) # conversion type</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid.illegal.placeholder.evi</string>
            <key>match</key>
            <string>(%)(?!"\s*(PRI|SCN))</string>
          </dict>
        </array>
      </dict>
      <key>arrays</key>
      <dict>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.brace.array.begin.evi</string>
          </dict>
        </dict>
        <key>contentName</key>
        <string>meta.array.elements.evi</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expressions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punct-comma</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#illegals</string>
          </dict>
        </array>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.brace.array.end.evi</string>
          </dict>
        </dict>
      </dict>
      <key>punct-terminator</key>
      <dict>
        <key>name</key>
        <string>punctuation.terminator.evi</string>
        <key>match</key>
        <string>;</string>
      </dict>
      <key>punct-comma</key>
      <dict>
        <key>name</key>
        <string>punctuation.comma.evi</string>
        <key>match</key>
        <string>,</string>
      </dict>
      <key>pre-directives</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.apply.evi</string>
            <key>begin</key>
            <string>^\s*((#)\s*(apply))\b\s*</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.evi</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.evi</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#strings</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#illegals</string>
              </dict>
            </array>
            <key>end</key>
            <string>(?=(?:\\|\\:))|(?&lt;!\\)(?=\n)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.flag.evi</string>
            <key>begin</key>
            <string>^\s*((#)\s*(flag|unset))\b\s*</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.evi</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.flag.evi</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>entity.name.function.preprocessor.flag.evi</string>
                <key>match</key>
                <string>[A-Za-z_][A-Za-z_0-9]*</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#illegals</string>
              </dict>
            </array>
            <key>end</key>
            <string>(?=(?:\\|\\:))|(?&lt;!\\)(?=\n)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.flag.evi</string>
            <key>begin</key>
            <string>^\s*((#)\s*(undef))\b\s*</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.evi</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.undef.evi</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>entity.name.function.preprocessor.macro.evi</string>
                <key>match</key>
                <string>[A-Za-z_][A-Za-z_0-9]*</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#illegals</string>
              </dict>
            </array>
            <key>end</key>
            <string>(?=(?:\\|\\:))|(?&lt;!\\)(?=\n)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.line.evi</string>
            <key>begin</key>
            <string>^\s*((#)\s*(line))\b\s*</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.evi</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.line.evi</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>constant.numeric.decimal.evi</string>
                <key>match</key>
                <string>[0-9]+</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#illegals</string>
              </dict>
            </array>
            <key>end</key>
            <string>(?=(?:\\|\\:))|(?&lt;!\\)(?=\n)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.macro.evi</string>
            <key>begin</key>
            <string>^\s*((#)\s*(macro))\b\s*(?:([a-zA-Z_][a-zA-Z0-9_]*)\s+|(\S*))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.evi</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.macro.evi</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.preprocessor.macro.evi</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>invalid.misplaced.evi</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.macro-definition.evi</string>
                <key>match</key>
                <string>\(|\)</string>
              </dict>
              <dict>
                <key>match</key>
                <string>\?</string>
                <key>name</key>
                <string>keyword.operator.question.macro-definition.evi</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#expressions</string>
              </dict>
            </array>
            <key>end</key>
            <string>(?=(?:\\|\\:))|(?&lt;!\\)(?=\n)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.file.evi</string>
            <key>begin</key>
            <string>^\s*((#)\s*(file))\b\s*</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.evi</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.file.evi</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#strings</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#illegals</string>
              </dict>
            </array>
            <key>end</key>
            <string>(?=(?:\\|\\:))|(?&lt;!\\)(?=\n)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.conditional.evi</string>
            <key>begin</key>
            <string>^\s*((#)\s*(ifset|ifnset|ifdef|ifndef))\b\s*</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.evi</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.conditional.evi</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>[A-Za-z_][A-Za-z_0-9]*</string>
                <key>name</key>
                <string>entity.name.function.preprocessor.evi</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#illegals</string>
              </dict>
            </array>
            <key>end</key>
            <string>(?=(?:\\|\\:))|(?&lt;!\\)(?=\n)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.conditional.evi</string>
            <key>match</key>
            <string>^\s*((#)\s*(else|endif))\b\s*</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.evi</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.conditional.evi</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.info.evi</string>
            <key>begin</key>
            <string>^\s*((#)\s*(info))\b\s*</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.evi</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.directive.info.evi</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>[A-Za-z_][A-Za-z_0-9]*</string>
                <key>name</key>
                <string>punctuation.definition.directive.info.evi</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#expressions</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#illegals</string>
              </dict>
            </array>
            <key>end</key>
            <string>(?=(?:\\|\\:))|(?&lt;!\\)(?=\n)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.preprocessor.linemarker.evi</string>
            <key>match</key>
            <string>^\s*(#) ?([0-9]+)? ?('(?:\?.*)')?$</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.directive.evi</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.decimal.evi</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>string.quoted.double.evi</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>macro-invoke</key>
      <dict>
        <key>name</key>
        <string>entity.name.constant.macro.evi</string>
        <key>match</key>
        <string>[A-Za-z_][A-Za-z_0-9]*#</string>
      </dict>
      <key>comments</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.block.evi</string>
            <key>begin</key>
            <string>\\:</string>
            <key>end</key>
            <string>:\\</string>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.line.documentation.evi</string>
            <key>match</key>
            <string>\\?(?: (@param [0-9]+|@return) ).*$</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.class.evi</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.line.evi</string>
            <key>match</key>
            <string>\\.*$</string>
          </dict>
        </array>
      </dict>
      <key>illegals</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\s+</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid.illegal.evi</string>
            <key>match</key>
            <string>\S</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>